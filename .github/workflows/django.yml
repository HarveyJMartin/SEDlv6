name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Bandit checks for security issues in code, excluding test files as test objects were flagging password issues.
    - name: Run Bandit (Code security check)
      run: |
        bandit -r . --exclude '**/tests.py'

    # Safety checks for vulnerabilities in dependencies.
    - name: Run Safety (Dependency vulnerability scanning)
      run: |
        safety check --full-report

    #Formatting
    - name: Black Check (Code formatting)
        # This will fail the pipeline if black formatting checks fail
      run: |
        black --check --diff .

    # Linting
    - name: Run Flake8 (linting and style enforcement)
      run: |
        flake8 .
    - name: Run Tests with coverage (Using coverage package)
      env:
        USE_SQLITE: true
      run: |
        coverage run manage.py test
        coverage report
        coverage xml

